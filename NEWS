Version 0.7
===========
- disnix-snapshot/disnix-restore/disnix-delete-state: allow filtering on container and component level

- Created three new tools encapsulating meaningful sets of activities: disnix-delegate, disnix-deploy and disnix-migrate

- disnix-env is now a composition of disnix-delegate, disnix-manifest and disnix-deploy

Version 0.6
===========
- Changed the distribution internals. Now every service maps to a container on a target system. When no container is specified, it auto maps a service to the container with the type name

- New formalism for the infrastructure model. Now every target defines system settings, general properties and properties per container

- Activation parameters are now scoped. Only parameters that a Dysnomia module needs to know about are propagated.

- disnix-visualize also shows containers to which services have been deployed

- Added disnix-capture-infra that consults the remote machines' Dysnomia container configurations to generate an infrastructure expression

- Add package type to deploy packages as services. Packages will get installed, but not activated or deactivated.

Version 0.5
===========
- Services model also takes an invDistribution parameter, which refers to the infrastructure model in which each target is augmented with the services that have been mapped to it

- Some noise has been removed from the output

- Introduced SSH_USER environment variable to configure the username to connect with to remote machines with disnix-ssh-client

- disnix-lock and disnix-visualize can now also be called without a file parameter. With no file parameter, it attempts to open the manifest of the last deployment

- Added a Debian compatible init.d script for convenience for installing on Debian derivatives

- If the data migration phase fails, the user gets some notes on how to resolve it

- disnix-env now also implements --rollback and --switch-generation

- Eliminates dependency on dbus-glib and move to gdbus

- Major restructurings in manual and additional chapters describing state management, and deploying target-specific services

Version 0.4
===========
- The distributed derivation and manifest generator now pass the XML input as files to support bigger ones (Nix 1.9 or newer required)

- Manual pages are now generated with help2man and doclifter

- Implemented snapshot and restore operations that can be optionally enabled

- Separated locking and profile operations from disnix-activate into disnix-lock and disnix-set

Version 0.3
===========
- Added Cygwin installation instructions

- Disnix uses Dysnomia for activation, deactivation, lock and unlock operations instead of adhoc activation scripts

- Added manual page for disnix-query

- Implemented SIGINT handler for disnix-activate, that allows the process to interrupt gracefully.

- Implemented DISNIX_PROFILE environment variable

- Simplified manifest format

- Many additional testcases and bugfixes

- Improved logging

- Concurrent closure transfers

- Parallelised transition process

- Multi connection protocol support

Version 0.2
===========
- Added disnix-visualize tool

- Fixed bug with zombie processes

- Major code cleanups (boilerplate and separated shared stuff in libraries)

- Implemented some features for integration with a virtualisation extension

- Added user manual

- Manual pages are in docbook now

- Fixed memory leaks in disnix-activate

- Larger test suite

- Public library interface for extensions

- Copes with machines that disappear

- Services model provides pkgs argument. Does not have to be imported manually.

- Doxygen API documentation

