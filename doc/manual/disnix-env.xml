<refentry xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xml:id="sec-disnix-env">
          
	<refmeta>
		<refentrytitle>disnix-env</refentrytitle>
		<manvolnum>1</manvolnum>
		<refmiscinfo class="source">Disnix</refmiscinfo>
		<refmiscinfo class="version"><xi:include href="version.txt" parse="text" /></refmiscinfo>
	</refmeta>
	
	<refnamediv>
		<refname>disnix-env</refname>
		<refpurpose>Installs or updates the environment of a distributed system</refpurpose>
	</refnamediv>
	
	<refsynopsisdiv>
		<cmdsynopsis>
			<command>disnix-env</command>
			<arg choice="plain"><option>-s</option> <replaceable>services_expr</replaceable></arg>
			<arg choice="plain"><option>-i</option> <replaceable>infrastructure_expr</replaceable></arg>
			<arg choice="plain"><option>-d</option> <replaceable>distribution_expr</replaceable></arg>
			<arg><replaceable>options</replaceable></arg>
		</cmdsynopsis>
	</refsynopsisdiv>
	
	<refsection>
		<title>Description</title>
		
		<para>
			The command <command>disnix-env</command> is used to install or upgrade a distributed system in a given environment.
			This command requires three Nix expressions as input parameters; A services model capturing
			the components of a distributed system and its inter-dependencies; A infrastructure model capturing
			the machines in the network and its properties and a distribution model which maps services to machines.
		</para>
		<para>
			By invoking this command it will first build all the services that are defined in the distribution
			model from source code including all its dependencies. If all the services are successfully built,
			the closures of the services are transferred to the target machines in the network. Finally, the
			services are activated by traversing the inter-dependency graph of all the services.
			In case of a failure a rollback is performed to bring the system back in its previous configuration.
		</para>
		<para>
			When there is already a distributed system configuration deployed, an upgrade is performed. In this
			phase only the changed parts of the system are deactivated and activated. In this process we
			also deal with the inter-dependencies so that no services fails due to a missing inter-dependency.
		</para>
		<para>
			Since the target machines could be of a different type or architecture as the coordinator machine,
			we may not be able to build a specific service for the given target machine. In such cases,
			<command>disnix-env</command> also provides the option to build the services on the target machines and to keep
			the build results for further use.
		</para>
	</refsection>
	
	<refsection>
		<title>Options</title>
		
		<variablelist>
			<varlistentry>
				<term><option>-s</option>, <option>--services</option></term>
				<listitem>
					<para>
						Services Nix expression which describes all components of the distributed system
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-i</option>, <option>--infrastructure</option></term>
				<listitem>
					<para>
						Infrastructure Nix expression which captures properties of machines in the network
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-d</option>, <option>--distribution</option></term>
				<listitem>
					<para>
						Distribution Nix expression which maps services to machines in the network
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--target-property</option></term>
				<listitem>
					<para>
						The target property of an infrastructure model, that specifies how to connect
						to the remote Disnix interface. (Defaults to hostname)
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--interface</option></term>
				<listitem>
					<para>
						Path to executable that communicates with a Disnix interface. Defaults to
						<link linkend="sec-disnix-ssh-client"><command>disnix-ssh-client</command></link>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-p</option>, <option>--profile</option></term>
				<listitem>
					<para>
						Name of the profile that is used for this system. Defaults to: default
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--build-on-targets</option></term>
				<listitem>
					<para>
						Build the services on the target machines in the network instead of managing the build by the coordinator.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--coordinator-profile-path</option></term>
				<listitem>
					<para>
						Nix profile path where the manifest should be stored, so that Disnix knows the current configuration
						of a distributed system. By default it is stored in the profile directory of the user.
						Most users do not want to use this option directly, but it is used by e.g. the virtualization
						extension to store a virtual machine network configuration in a separate directory.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--no-upgrade</option></term>
				<listitem>
					<para>
						By enabling this option Disnix will not perform an upgrade, but only activates services in the
						new configuration.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--dry-run</option></term>
				<listitem>
					<para>
						By enabling this option Disnix displays what deactivation and activation steps it intends to perform but does not actually
						run them.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--show-trace</option></term>
				<listitem>
					<para>
						Shows a trace of the output.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-h</option>, <option>--help</option></term>
				<listitem>
					<para>
						Shows the usage of this command to the user.
					</para>
				</listitem>
			</varlistentry>	
		</variablelist>
	</refsection>
	
	<refsection>
		<title>Environment variables</title>
		
		<variablelist>
			<varlistentry>
				<term><option>DISNIX_CLIENT_INTERFACE</option></term>
				<listitem>
					<para>
						Sets the client interface (which defaults to
						<link linkend="sec-disnix-ssh-client"><command>disnix-ssh-client</command></link>)
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>DISNIX_TARGET_PROPERTY</option></term>
				<listitem>
					<para>
						Sets the target property of an infrastructure model,
						that specifies how to connect to the remote Disnix interface. (Defaults to hostname)
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>DISNIX_PROFILE</option></term>
				<listitem>
					<para>
						Sets the name of the profile that stores the manifest on the coordinator machine and the deployed
						services per machine on each target (Defaults to: default).
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsection>
</refentry>
