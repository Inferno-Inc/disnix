<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:id="chap-extensions">

	<title>Extensions</title>

        <para>
		Although Disnix makes the deployment of a distributed system more convenient and
		offers various kinds of features to make this process reliable and efficient, some extensions have been
		developed to make deployment processes more convenient.
        </para>
        
	<section>
		<title>DisnixWebService</title> 
		
		<para>
			In some cases other communication kinds of communication protocols are needed to
			connect to remote machines besides SSH. The <code>DisnixWebService</code>
			is a package that implements a SOAP interface for deployment operations and
			a client interface named <command>disnix-soap-client</command> to connect to it.
		</para>
	</section>

	<section>
		<title>DisnixOS</title>
		
		<para>
			Although Disnix manages the distributable components (services) of which a
			distributed system is composed and the inter-dependencies, Disnix does
			not manage the underlying system configurations of the actual machines to which services are deployed.
			The DisnixOS package comnbines the Disnix tooling and NixOS tooling to manage distributed
			system components <emphasis>and</emphasis> the underlying infrastructure based on
			<link xlink:href="http://nixos.org/nixos">NixOS</link>
			system configurations, and an extension to automatically
			create virtual machine instances from the network configuration for testing.
		</para>
	</section>
	
	<section>
		<title>Dynamic Disnix</title>
		
		<para>
			Disnix implements a static deployment model -- to make it work it requires a infrastructure
			model and distribution model to be manually specified every time something in the configuration changes.
		</para>
		<para>
			Dynamic Disnix is an extended toolset providing a discovery service to capture machine configurations in a
			network, as well as a distribution generation framework that can be used to
			generate a distribution model from technical and non-functional attributes of services and machines.
			These tools can be used to develop a framework enabling self adaptive (re)deployment of service-oriented
			systems.
		</para>
	</section>
</chapter>
