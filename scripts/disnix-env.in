#!/bin/bash -e
# Disnix - A distributed application layer for Nix
# Copyright (C) 2008-2011  Sander van der Burg
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

# Shows the usage of this command to the user

showUsage()
{
    echo "Usage: $0 -s services_expr -i infrastructure_expr -d distribution_expr [options]"
    echo "Options:"
    echo
    echo "-s,--services               Services Nix expression which describes all components of the distributed system"
    echo "-i,--infrastructure         Infrastructure Nix expression which captures properties of machines in the network"
    echo "-d,--distribution           Distribution Nix expression which maps services to machines in the network"
    echo "--target-property           The target property of an infrastructure model, that specifies how to "
    echo "                            connect to the remote Disnix interface. (Defaults to hostname)"
    echo "--interface                 Process that communicates with the remote disnix service. Defaults to disnix-ssh-client"
    echo "-p,--profile                Name of the profile that is used for this system. Defaults to: default"
    echo "--build-on-targets          Build the services on the target machines in the network instead of managing the build by the coordinator"
    echo "--coordinator-profile-path  Path where to store the coordinator profile generations"
    echo "--no-upgrade                Do not perform an upgrade, but activate all services of the new configuration"
    echo "--show-trace                Shows a trace of the output"
    echo "-h,--help                   Shows the usage of this command"
}

# Autoconf settings

export prefix=@prefix@

# Import checks

source @datadir@/@PACKAGE@/checks

# Parse valid argument options

PARAMS=`getopt -n $0 -o s:i:d:p:h -l services:,infrastructure:,distribution:,interface:,target-property:,profile:,build-on-targets,coordinator-profile-path:,no-upgrade,show-trace,help -- "$@"`

if [ $? != 0 ]
then
    showUsage
    exit 1
fi

eval set -- "$PARAMS"

# Evaluate valid options

while [ "$1" != "--" ]
do
    case "$1" in
        -s|--services)	    
	    servicesFile=`readlink -f $2`
	    ;;
	-i|--infrastructure)
	    infrastructureFile=`readlink -f $2`
	    ;;
	-d|--distribution)
	    distributionFile=`readlink -f $2`
	    ;;
	--build-on-targets)
	    buildOnTargets=1
	    ;;
	--show-trace)
	    showTrace=1
	    ;;
	--interface)
	    interface=$2
	    ;;
	-p|--profile)
	    profileArg="--profile $2"
	    ;;
	--coordinator-profile-path)
	    coordinatorProfilePathArg="--coordinator-profile-path $2"
	    ;;
	--target-property)
	    targetProperty=$2
	    ;;
	--no-upgrade)
	    noUpgradeArg="--no-upgrade"
	    ;;
	-h|--help)
	    showUsage
	    exit 0
	    ;;
    esac
    
    shift
done

# Validate the given options

checkServicesFile
checkInfrastructureFile
checkDistributionFile
checkClientInterface
checkTargetProperty
checkShowTrace

# Execute operations

if [ "$buildOnTargets" = "1" ]
then
    distributedDerivation=`disnix-instantiate -s $servicesFile -i $infrastructureFile -d $distributionFile --target-property $targetProperty --no-out-link $showTraceArg`
    disnix-build --interface $interface $distributedDerivation
fi

manifest=`disnix-manifest -s $servicesFile -i $infrastructureFile -d $distributionFile --target-property $targetProperty --no-out-link $showTraceArg`
disnix-distribute --interface $interface $manifest
disnix-activate --interface $interface $profileArg $coordinatorProfilePathArg $noUpgradeArg $manifest
