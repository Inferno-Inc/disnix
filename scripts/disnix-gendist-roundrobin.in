#!/bin/bash -e
# Disnix - A distributed application layer for Nix
# Copyright (C) 2008-2010  Sander van der Burg
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

# Shows the usage of this command to the user

showUsage()
{
    echo "Usage: $0 -s services_expr -i infrastructure_expr"
    echo "Options:"
    echo
    echo "-s,--services       Services Nix expression which describes all components of the distributed system"
    echo "-i,--infrastructure Infrastructure Nix expression which captures properties of machines in the network"
    echo "-h,--help           Shows the usage of this command"
}

# Autoconf settings

export prefix=@prefix@

# Parse valid argument options

PARAMS=`getopt -n $0 -o s:i:h -l services:,infrastructure:,help -- "$@"`

if [ $? != 0 ]
then
    showUsage
    exit 1
fi

eval set -- "$PARAMS"

# Evaluate valid options

while [ "$1" != "--" ]
do
    case "$1" in
        -s|--services)	    
	    servicesFile=`readlink -f $2`
	    ;;
	-i|--infrastructure)
	    infrastructureFile=`readlink -f $2`
	    ;;
	-h|--help)
	    showUsage
	    exit 0
	    ;;
    esac
    
    shift
done

# Validate the given options

if [ "$servicesFile" = "" ]
then
    echo "ERROR: A services expression must be specified!" >&2
    exit 1
fi

if [ "$infrastructureFile" = "" ]
then
    echo "ERROR: A infrastructure expression must be specified!" >&2
    exit 1
fi

# Build the distribution model

nix-build --argstr servicesFile "$(readlink -f $servicesFile)" \
          --argstr infrastructureFile "$(readlink -f $infrastructureFile)" \
	  "$(readlink -f @datadir@/@PACKAGE@/gendist-roundrobin.nix)"
